@model DAM.Models.ViewModel.TKViewModel

@{
    ViewBag.Title = "TTTaiKhoan";
    Layout = "~/Views/Layout/TTTaiKhoanLayout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.20/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.20/dist/sweetalert2.all.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btn_CapNhat").click(function (e) {
            e.preventDefault(); // Ngăn chặn form submit mặc định

            var formData = $("#purchaseForm").serialize(); // Lấy dữ liệu từ form
            console.log("Dữ liệu Form:", formData); 
           $.ajax({
                url: '@Url.Action("TTTaiKhoan", "Main")',
                type: 'POST',
                data: formData,
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Cập nhật tài khoản thành công',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Main", "Main")';
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Cập nhật tài khoản không thành công',
                            text: 'Có lỗi xảy ra',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        title: 'Cập nhật tài khoản không thành công',
                        text: 'Có lỗi kết nối',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    });
</script>

<style>
    #form_TaoMoi {
        width: 820px;
        margin: 0 auto;
    }
</style>
<div id="form_TaoMoi">
    @using (Html.BeginForm("TTTaiKhoan", "Main", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "purchaseForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TenTK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Hidden("TenTKGoc", Model.TenTK)
                    @Html.EditorFor(model => model.TenTK, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                    @Html.Hidden("MKGoc", Model.MatKhau)
                    @if (!string.IsNullOrEmpty(ViewBag.errMK))
                    {
                        <span class="text-danger">@ViewBag.errMK</span>
                    }
                    @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoVaTen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoVaTen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoVaTen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="display:flex">
                    <div class="Tb_Err" style="flex:1">
                        <input type="file" name="HinhAnh" id="fileInput" />
                        @if (!string.IsNullOrEmpty(ViewBag.upload))
                        {
                            <span class="text-danger">@ViewBag.upload</span>
                        }
                    </div>
                    <div id="imagePreview" style="flex:2">
                        <img src="@Url.Content("~/Content/TKImages/"+ Model.HinhAnh)" style="height:100px" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SoDienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Hidden("SDTGoc", Model.SoDienThoai)
                    @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Hidden("EmailGoc", Model.Email)
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            
            <div class="agile-info-wthree-box" style="display:flex; justify-content: center;">
                <input type="submit" id="btn_CapNhat" value="Cập nhật" class="DatVe" />
            </div>
        </div>
    }
</div>

<script>
    document.getElementById("fileInput").addEventListener("change", function (event) {
        var input = event.target;
        var reader = new FileReader();

        reader.onload = function () {
            var imgElement = document.createElement("img");
            imgElement.src = reader.result;
            imgElement.height = 100;
            document.getElementById("imagePreview").innerHTML = ""; // Xóa hình ảnh cũ (nếu có)
            document.getElementById("imagePreview").appendChild(imgElement); // Hiển thị hình ảnh mới
        };

        reader.readAsDataURL(input.files[0]);
    });
</script>


