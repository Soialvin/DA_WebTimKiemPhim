@model DAM.Models.ViewModel.TKViewModel

@{
    ViewBag.Title = "Sua";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}
<style>
    #form_TaoMoi {
        width: 820px;
        margin: 0 auto;
    }
</style>
<div id="form_TaoMoi">
    @using (Html.BeginForm("Sua", "QLTaiKhoan", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.TenTK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Hidden("TenTKGoc", Model.TenTK)
                    @Html.EditorFor(model => model.TenTK, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                    @Html.Hidden("MKGoc", Model.MatKhau)
                    @if (!string.IsNullOrEmpty(ViewBag.errMK))
                    {
                        <span class="text-danger">@ViewBag.errMK</span>
                    }
                    @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HoVaTen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HoVaTen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HoVaTen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="display:flex">
                    <div class="Tb_Err" style="flex:1">
                        <input type="file" name="HinhAnh" id="fileInput" />
                        @if (!string.IsNullOrEmpty(ViewBag.upload))
                        {
                            <span class="text-danger">@ViewBag.upload</span>
                        }
                    </div>
                    <div id="imagePreview" style="flex:2">
                        <img src="@Url.Content("~/Content/TKImages/"+ Model.HinhAnh)" style="height:100px" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SoDienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Hidden("SDTGoc", Model.SoDienThoai)
                    @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Hidden("EmailGoc", Model.Email)
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LoaiTK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LoaiTK", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LoaiTK, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TrangThai", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NgayDK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.NgayDK != null)
                    {
                        @Html.TextBox("NgayDK", Model.NgayDK.ToString("dd/MM/yyyy"), new { @readonly = "readonly" })
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cập nhật" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Quay lại", "QLTaiKhoan", null, new { @class = "btn btn-primary" })
</div>
<script>
    document.getElementById("fileInput").addEventListener("change", function (event) {
        var input = event.target;
        var reader = new FileReader();

        reader.onload = function () {
            var imgElement = document.createElement("img");
            imgElement.src = reader.result;
            imgElement.height = 100;
            document.getElementById("imagePreview").innerHTML = ""; // Xóa hình ảnh cũ (nếu có)
            document.getElementById("imagePreview").appendChild(imgElement); // Hiển thị hình ảnh mới
        };

        reader.readAsDataURL(input.files[0]);
    });
</script>
