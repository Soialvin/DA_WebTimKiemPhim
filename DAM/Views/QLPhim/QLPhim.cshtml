@model IEnumerable<DAM.Models.ViewModel.PhimViewModel>
@{
    ViewBag.Title = "QLPhim";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
    //Khởi tạo control webgrid
    WebGrid grid = new WebGrid(source: Model, canPage: true, rowsPerPage: 5);
}
@*Thể hiện dữ liệu thông qua control webgrid*@

<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Xác nhận xóa</h4>
            </div>

            <div class="modal-body">
                <p>Bạn có muốn xóa không?</p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <a class="btn btn-danger btn-ok">Ok</a>
            </div>
        </div>
    </div>
</div>

<a href="@Url.Action("TaoMoi", "QLPhim")" id="btn_TaoMoi">
    <i class='fa-solid fa-plus fa-beat' style='color: #ffffff;'></i>
</a>
<div class="form-group col-lg-12">
    <a href="@Url.Action("ExportExcel","QLPhim")" class="btn btn-primary" style="float:right">Export Excel</a>
    @using (Html.BeginForm("TimKiem", "QLPhim", FormMethod.Get))
    {
        <div class="col-md-3">
            <input type="text" placeholder="Nhập từ khóa cần tìm" name="keyword" value="@ViewBag.Search" class="form-control" />
        </div>
        <div class="col-md-3">
            <input type="submit" value="Tìm kiếm" class="btn btn-success" />
        </div>
    }
</div>
<div id="ctn">
    @grid.GetHtml(
        tableStyle: "gridTable",
        headerStyle: "gridHead",
        footerStyle: "gridFooter",
        rowStyle: "gridRow",
        alternatingRowStyle: "gridAltRow",
        columns: grid.Columns(
            grid.Column("MaPhim", "Mã phim"),
            grid.Column("TenPhim", "Tên phim"),
            grid.Column("HinhAnh", "Hình ảnh", format: x =>
            {
                if (!string.IsNullOrEmpty(x.HinhAnh) && (x.HinhAnh) != "LogoFilm.png")
                {
                    return @Html.Raw("<div class=\"img-container\"><img class=\"HinhAnh\" src=\"../Content/MovieImages/" + x.HinhAnh + "\"></div>");
                }
                else
                {
                    return @Html.Raw("<div class=\"img-container\"><img class=\"HinhAnh\" src=\"../Content/Image/LogoFilm.png\"></div>");
                }
            }),
            //grid.Column("HinhAnh", "Hình ảnh", format: x => @Html.Raw("<div class=\"img-container\"><img class=\"HinhAnh\" src=\"../Content/MovieImages/" + x.HinhAnh + "\"></div>")),
            grid.Column("DaTaTrailer","Mã Trailer"),
            grid.Column("ThongTinPhim", "Thông tin phim"),
            grid.Column("NoiDung", "Nội dung"),
            grid.Column("ThoiLuong", "Thời lượng"),
            grid.Column("TrangThai", "Trạng Thái"),
            grid.Column("NgayChieu", "Ngày chiếu", format: x => x.NgayChieu.ToString("dd/MM/yyyy")),
            grid.Column("MaSC", "Mã suất chiếu", format: item =>
            {
                var maSCList = (item.MaSC as List<string>) ?? new List<string>();
                if (maSCList != null && maSCList.Any())
                {
                    var maSCHtml = "";
                    foreach (var maSC in maSCList)
                    {
                        maSCHtml += maSC + ", ";
                    }
                    // Loại bỏ dấu ',' ở cuối cùng nếu có
                    maSCHtml = maSCHtml.TrimEnd(',', ' ');
                    return maSCHtml;
                }
                return "";
            }),
            grid.Column("MaTL", "Mã thể loại", format: item =>
            {
                var maTLList = (item.MaTL as List<string>) ?? new List<string>();
                if (maTLList != null && maTLList.Any())
                {
                    var maTLHtml = "";
                    foreach (var maTL in maTLList)
                    {
                        maTLHtml += maTL + ", ";
                    }
                    // Loại bỏ dấu ',' ở cuối cùng nếu có
                    maTLHtml = maTLHtml.TrimEnd(',', ' ');
                    return maTLHtml;
                }
                return "";
            }),
            grid.Column(format: x =>
            {
                var link = Url.Action("ChinhSua", new { MaPhim = x.MaPhim });
                return new HtmlString($"<a href='{link}'><i class=\"fa-regular fa-pen-to-square\" style=\"font-size: 30px;\"></i></a>");
            }),
            grid.Column(format: x =>
            {
                var link = Url.Action("Xoa", new { MaPhim = x.MaPhim });
                return new HtmlString($"<a href=\"#\" data-href='{link}' data-toggle=\"modal\" data-target=\"#confirm-delete\"><i class=\"fa-solid fa-trash\" style=\"font-size: 30px;\"></i></a>");
            })
            ))
</div>
<style>
    .gridTable {
        width: 2000px;
    }

    .gridHead {
        border-bottom: 2px solid;
        position: sticky;
        top: 0;
        background-color: white;
    }

    .gridHead th {
        text-align: center;
    }

    .gridRow td,
    .gridAltRow td {
        text-align: center;
        height: 100px;
        border-bottom: 2px solid #7F8C8D;
    }
    .gridFooter {
        position: sticky;
        bottom: 0;
        background-color: white;
    }
    .gridFooter td {
        font-weight: bold;
        padding-left: 30px;
    }

    .img-container {
        width: 150px;
        height: 150px;
        margin: 0 auto;
    }

    .img-container .HinhAnh {
        height: 100%;
        width: 100%;
        object-fit: scale-down;
    }
    #ctn {
        width: 99%;
        margin: 0 auto;
        overflow: scroll;
        height: 535px
    }

    ::-webkit-scrollbar {
        width: 10px;
        height: 10px;
    }

    ::-webkit-scrollbar-thumb {
        background-color: grey;
        border-radius: 5px;
    }

    ::-webkit-scrollbar-thumb:hover {
        background-color: #449D44;
    }
    .gridTable tr td a i:hover {
        color: orangered;
    }
</style>
<script>
        $('#confirm-delete').on('show.bs.modal', function(e) {
            $(this).find('.btn-ok').attr('href', $(e.relatedTarget).data('href'));

            $('.debug-url').html('Delete URL: <strong>' + $(this).find('.btn-ok').attr('href') + '</strong>');
        });
</script>