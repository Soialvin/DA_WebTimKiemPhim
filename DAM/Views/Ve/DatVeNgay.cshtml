@model DAM.Models.ViewModel.RapSCPhimViewModel

@{
    ViewBag.Title = "TaoMoi";
    Layout = "~/Views/Layout/DatVeLayout.cshtml";
}
<body>
    <div class="col-sm-8 single-left">
        <h4 style="margin: 0 0 50px 0;" class="latest-text w3_latest_text">Đặt vé</h4>
        <div class="agile-info-wthree-box">
            @using (Html.BeginForm("ChonGhe", "Ve", FormMethod.Post, new { @enctype = "multipart/form-data", @id = "purchaseForm" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.TenPhim, "Tên phim", htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TenPhim, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style ="width: 100%;" } })
                            @Html.HiddenFor(model => model.MaPhim, new {@id = "txtMaPhim"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaRap, "Tên rạp", htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-10">
                            @Html.DropDownList("MaRap", null, "- Chọn rạp -", htmlAttributes: new { @class = "form-control", @id = "dropdown2", onchange = "showMaRap()" })
                            @Html.ValidationMessageFor(model => model.MaRap, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NgayChieu, "Ngày chiếu", htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-10">
                            @Html.DropDownList("NgayChieu", null, "- Chọn ngày chiếu -", htmlAttributes: new { @class = "form-control", @disabled = "disable", @id = "dropdown3", onchange = "showNgayChieu()" })
                            @Html.ValidationMessageFor(model => model.NgayChieu, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaSC, "Suất chiếu", htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-10">
                            @Html.DropDownList("MaSC", null, "- Chọn suất chiếu -", htmlAttributes: new { @class = "form-control", @disabled = "disable", @id = "dropdown4", onchange = "showMaSC()" })
                            @Html.ValidationMessageFor(model => model.MaSC, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="DatVe" style="display:flex; justify-content: center;">
                    @if (Session["user"] == null)
                    {
                        <input type="button" value="Đặt vé" id="datVeButton1" disabled />
                    }
                    else
                    {
                        <input type="submit" value="Đặt vé" id="datVeButton" disabled />
                    }
                </div>
            }
        </div>
    </div>
    <style>
        #datVeButton:disabled {
            pointer-events: none;
        }

        #datVeButton1:disabled {
            pointer-events: none;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script>
        var datVeButton1 = document.getElementById("datVeButton1");
        if (datVeButton1 != null) {
            document.getElementById("datVeButton1").addEventListener('click', function() {
                window.location.href = '@Url.Action("DangNhap", "DangNhapDangKy")';
            });
        }
        function showMaRap() {
            var maRapDropdown = document.getElementById("dropdown2");
            var ngayChieuDropdown = document.getElementById("dropdown3");
            var maSCDropdown = document.getElementById("dropdown4");
            var datVeButton = document.getElementById("datVeButton");
            var datVeButton1 = document.getElementById("datVeButton1");
            if (datVeButton != null) {
                if (maRapDropdown.value != "") {
                    ngayChieuDropdown.disabled = false;
                    maSCDropdown.disabled = true;
                    maSCDropdown.selectedIndex = 0;
                    datVeButton.disabled = true;
                }
                else {
                    ngayChieuDropdown.disabled = true;
                    ngayChieuDropdown.selectedIndex = 0;
                    maSCDropdown.disabled = true;
                    maSCDropdown.selectedIndex = 0;
                    datVeButton.disabled = true;
                }
            }
            if (datVeButton1 != null) {
                if (maRapDropdown.value != "") {
                    ngayChieuDropdown.disabled = false;
                    maSCDropdown.disabled = true;
                    maSCDropdown.selectedIndex = 0;
                    datVeButton1.disabled = true;
                }
                else {
                    ngayChieuDropdown.disabled = true;
                    ngayChieuDropdown.selectedIndex = 0;
                    maSCDropdown.disabled = true;
                    maSCDropdown.selectedIndex = 0;
                    datVeButton1.disabled = true;
                }
            }
        }
        function showNgayChieu() {
            var ngayChieuDropdown = document.getElementById("dropdown3");
            var maSCDropdown = document.getElementById("dropdown4");
            var datVeButton = document.getElementById("datVeButton");
            var datVeButton1 = document.getElementById("datVeButton1");
            if (datVeButton != null) {
                if (ngayChieuDropdown.value != "") {
                    maSCDropdown.disabled = false;
                    datVeButton.disabled = true;
                }
                else {
                    maSCDropdown.disabled = true;
                    maSCDropdown.selectedIndex = 0;
                    datVeButton.disabled = true;
                }
            }
            if (datVeButton1 != null) {
                if (ngayChieuDropdown.value != "") {
                    maSCDropdown.disabled = false;
                    datVeButton1.disabled = true;
                }
                else {
                    maSCDropdown.disabled = true;
                    maSCDropdown.selectedIndex = 0;
                    datVeButton1.disabled = true;
                }
            }
        }
        function showMaSC() {
            var maSCDropdown = document.getElementById("dropdown4");
            var datVeButton = document.getElementById("datVeButton");
            var datVeButton1 = document.getElementById("datVeButton1");
            if (datVeButton != null) {
                if (maSCDropdown.value != "") {
                    datVeButton.disabled = false;
                }
                else {
                    datVeButton.disabled = true;
                }
            }
            if (datVeButton1 != null) {
                if (maSCDropdown.value != "") {
                    datVeButton1.disabled = false;
                }
                else {
                    datVeButton1.disabled = true;
                }
            }
        }

        $(document).ready(function () {
            var selectedPhim = $("#txtMaPhim").val();
            loadRapOptions(selectedPhim);

            // Gọi hàm loadNgayChieuOptions khi giá trị của dropdown MaRap thay đổi
            $("#dropdown2").change(function () {
                loadNgayChieuOptions();
            });

            // Gọi hàm loadSCOptions khi giá trị của dropdown MaRap thay đổi
            $("#dropdown3").change(function () {
                loadSCOptions();
            });

            function loadRapOptions(selectedPhim) {
                var rap = [];
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("loadRap", "Ve")",
                    data: { selectedPhim: selectedPhim },
                    success: function (data) {
                        $("#dropdown2").empty();
                        $("#dropdown2").append($('<option>', {
                            value: "",
                            text: "- Chọn rạp -"
                        }));
                        $.each(data, function (index, option) {
                            if (!rap.includes(option.MaRap)) {
                                rap.push(option.MaRap);
                                $("#dropdown2").append($('<option>', {
                                    value: option.MaRap,
                                    text: option.TenRap
                                }));
                            }
                        });
                    }
                });
            }

            function convertTimestampToDateString(timestamp) {
                // Kiểm tra xem timestamp có dạng "/Date(...)/" hay không
                if (typeof timestamp === 'string' && timestamp.startsWith('/Date(') && timestamp.endsWith(')/')) {
                    // Trích xuất phần số từ chuỗi
                    var timestampValue = parseInt(timestamp.substring(6, timestamp.length - 2));

                    // Kiểm tra xem giá trị có phải là số hay không
                    if (!isNaN(timestampValue)) {
                        var ngayChieu = new Date(timestampValue);
                        var nam = ngayChieu.getFullYear();
                        var thang = ngayChieu.getMonth() + 1;
                        var ngay = ngayChieu.getDate();
                        var ngayThangNam = (ngay < 10 ? '0' : '') + ngay + '/' + (thang < 10 ? '0' : '') + thang + '/' + nam;

                        return ngayThangNam;
                    }
                }

                // Nếu không chuyển đổi được, trả về một giá trị mặc định hoặc thông báo lỗi
                return 'Ngày không hợp lệ';
            }

            function loadNgayChieuOptions() {
                var selectedRap = $("#dropdown2").val();
                var addedDates = [];
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("loadNgayChieu", "Ve")",
                    data: { selectedPhim: selectedPhim, selectedRap: selectedRap },
                    success: function (data) {
                        $("#dropdown3").empty();
                        $("#dropdown3").append($('<option>', {
                            value: "",
                            text: "- Chọn ngày chiếu -"
                        }));
                        $.each(data, function (index, option) {
                            var ngayChieuFM = convertTimestampToDateString(option.NgayChieu);
                            if (!addedDates.includes(ngayChieuFM)) {
                                // Nếu chưa, thêm ngày vào danh sách và dropdown
                                addedDates.push(ngayChieuFM);

                                $("#dropdown3").append($('<option>', {
                                    value: ngayChieuFM,
                                    text: ngayChieuFM
                                }));
                            }
                        });
                    }
                });
            }

            function loadSCOptions() {
                var selectedRap = $("#dropdown2").val();
                var selectedNgayChieu = $("#dropdown3").val();

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("loadSC", "Ve")",
                    data: { selectedRap: selectedRap, selectedNgayChieu: selectedNgayChieu },
                    success: function (data) {
                        $("#dropdown4").empty();
                        $("#dropdown4").append($('<option>', {
                            value: "",
                            text: "- Chọn suất chiếu -"
                        }));
                        $.each(data, function (index, option) {
                            var timespan = option.KhungGio;

                            // Lấy giá trị giờ, phút và giây từ timespan
                            var hours = timespan.Hours;
                            var minutes = timespan.Minutes;
                            var seconds = timespan.Seconds;

                            // Định dạng giá trị giờ, phút và giây
                            var formattedHours = hours < 10 ? "0" + hours : hours;
                            var formattedMinutes = minutes < 10 ? "0" + minutes : minutes;
                            var formattedSeconds = seconds < 10 ? "0" + seconds : seconds;

                            // Tạo chuỗi hiển thị timespan
                            var timespanString = formattedHours + ":" + formattedMinutes + ":" + formattedSeconds;

                            $("#dropdown4").append($('<option>', {
                                value: option.MaSC,
                                text: timespanString
                            }));
                        });
                    }
                });
            }
        });
    </script>
</body>
